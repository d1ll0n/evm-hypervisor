{"version":3,"sources":["webpack://emasm/webpack/universalModuleDefinition","webpack://emasm/webpack/bootstrap","webpack://emasm/./src/util/is-hex-prefixed.js","webpack://emasm/./node_modules/bn.js/lib/bn.js","webpack://emasm/./src/util/strip-hex-prefix.js","webpack://emasm/./src/assemble.js","webpack://emasm/(webpack)/buildin/module.js","webpack://emasm/./src/util/index.js","webpack://emasm/./src/util/left-zero-pad-to-byte-length.js","webpack://emasm/./src/util/add-hex-prefix.js","webpack://emasm/./src/util/coerce-to-bn.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","substr","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","Buffer","wordSize","require","e","parseHex","str","start","end","len","Math","min","z","b","charCodeAt","parseBase","mul","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","_strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","_move","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","allocate","q","andln","iushrn","allocUnsafe","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","u","isHexPrefixed","ops","addHexPrefix","coerceToBN","leftZeroPadToByteLength","isLabelQuick","labels","pushBytes","bytes","currentLabel","partial","initial","encodePush","v","Number","push","firstPass","ast","progress","segmentOrder","pass","WeakMap","reduce","ary","isNaN","isLabel","jumpdest","set","label","pushLabel","bn","op","initialSegmentSymbol","meta","unshift","mergeInitial","totalMin","dynamicSlots","forEach","findOptimalJumpdestSize","passed","annotateJumpdestOffsets","encodeJumpdestPushes","map","join","webpackPolyfill","deprecate","paths","children","assign","stripHexPrefix"],"mappings":"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","file":"emasm.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"emasm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"emasm\"] = factory();\n\telse\n\t\troot[\"emasm\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\nconst isHexPrefixed = (s) => s.substr(0, 2) === '0x';\n\nmodule.exports = isHexPrefixed;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype._move = function _move (dest) {\n    dest.words = this.words;\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this._strip();\n    var littleEndian = endian === 'le';\n    var res = allocate(ArrayType, reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r._strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    a.umod(this.m)._forceRed(this)._move(a);\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nconst isHexPrefixed = require('./is-hex-prefixed');\nconst stripHexPrefix = (s) => isHexPrefixed(s) ? s.substr(2) : s;\n\nmodule.exports = stripHexPrefix;\n","'use strict';\n\nconst ops = require('./ops');\nconst BN = require('bn.js');\nconst {\n  addHexPrefix,\n  coerceToBN,\n  leftZeroPadToByteLength\n} = require('./util');\n\nconst isLabelQuick = (s, labels) => labels[s];\nconst isLabel = (s) => isNaN(s) && !ops[s] && !Array.isArray(s);\n\nconst pushBytes = (r, bytes) => {\n  if (!r.currentLabel) r.initial[r.initial.length - 1] += bytes;\n  else {\n    const partial = r.labels[r.currentLabel];\n    partial[partial.length - 1] += bytes;\n  }\n  return r;\n};\n\nconst pushLabel = (r, label) => {\n  if (!r.currentLabel) {\n    const { initial } = r;\n    initial.push(label);\n    initial.push('');\n  } else {\n    const partial = r.labels[r.currentLabel];\n    partial.push(label);\n    partial.push('');\n  }\n  return r;\n};\n\nconst encodePush = (v, length) => {\n  const baseOffset = Number(addHexPrefix(ops.push));\n  const opcodeValue = baseOffset + length - 1;\n  return opcodeValue.toString(16) + leftZeroPadToByteLength(v.toString(16), length);\n};\n\nconst firstPass = (ast, progress = { labels: {}, segmentOrder: [], initial: [''], pass: new WeakMap() }) => ast.reduce((r, v, i, ary) => {\n  r = r || progress;\n  if (r.pass.get(v)) return r;\n  if (Array.isArray(v)) return firstPass(v, r);\n  if (isLabel(v)) {\n    if (!i && Array.isArray(ary[i + 1])) {\n      r.labels[v] = [ ops.jumpdest ];\n      r.segmentOrder.push(v);\n      r.currentLabel = v;\n      r.pass.set(ary[i + 1], true);\n      return firstPass(ary[i + 1], r);\n    }\n    return pushLabel(r, v);\n  }\n  if (!isNaN(v)) {\n    const bn = coerceToBN(v);\n    const length = bn.byteLength() || 1;\n    if (length > 32) throw Error('constant integer overflow: ' + v);\n    return pushBytes(r, encodePush(bn, length));\n  }\n  const op = ops[v];\n  if (!op) throw Error('opcode not found: ' + v);\n  return pushBytes(r, op);\n}, null);\n\nconst initialSegmentSymbol = Symbol('@@initial');\n\nconst mergeInitial = (meta) => {\n  const {\n    labels,\n    initial,\n    segmentOrder\n  } = meta;\n  labels[initialSegmentSymbol] = initial;\n  segmentOrder.unshift(initialSegmentSymbol);\n};\n\nconst findOptimalJumpdestSize = ({\n  labels,\n  segmentOrder\n}) => {\n  let totalMin = 0, dynamicSlots = 0;\n  segmentOrder.forEach((label) => {\n    labels[label].forEach((partial) => {\n      if (isLabelQuick(partial, labels)) dynamicSlots++;\n      else totalMin += partial.length / 2;\n    });\n  });\n  return totalMin + dynamicSlots*2 <= 256 ? 2 : 3;\n};\n\nconst annotateJumpdestOffsets = ({\n  segmentOrder,\n  labels\n}, width) => {\n  let passed = 0;\n  segmentOrder.forEach((v) => {\n    const label = labels[v];\n    label.jumpdest = passed;\n    label.forEach((partial) => (passed += (isLabelQuick(partial, labels) ? width : partial.length / 2)));\n  });\n};\n\nconst encodeJumpdestPushes = ({\n  segmentOrder,\n  labels\n}, width) => {\n  segmentOrder.forEach((v) => {\n    labels[v].forEach((partial, i, ary) => {\n      if (isLabelQuick(partial, labels)) ary[i] = encodePush(labels[partial].jumpdest, width - 1);\n    });\n  });\n};\n\nconst assemble = (ast) => {\n  const meta = firstPass(ast);\n  mergeInitial(meta);\n  const width = findOptimalJumpdestSize(meta);\n  annotateJumpdestOffsets(meta, width);\n  encodeJumpdestPushes(meta, width);\n  const {\n    labels,\n    segmentOrder\n  } = meta;\n  return addHexPrefix(segmentOrder.map((v) => labels[v].join('')).join(''));\n};\n\nmodule.exports = assemble;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.assign(module.exports, {\n  leftZeroPadToByteLength: require('./left-zero-pad-to-byte-length'),\n  addHexPrefix: require('./add-hex-prefix'),\n  stripHexPrefix: require('./strip-hex-prefix'),\n  isHexPrefixed: require('./is-hex-prefixed'),\n  coerceToBN: require('./coerce-to-bn')\n});\n","'use strict';\n\nconst leftZeroPadToByteLength = (s, n) => Array(n*2 - s.length + 1).join('0') + s;\n\nmodule.exports = leftZeroPadToByteLength;\n","'use strict';\n\nconst addHexPrefix = (s) => s.substr(0, 2) === '0x' ? s : '0x' + s;\n\nmodule.exports = addHexPrefix;\n","'use strict';\n\nconst BN = require('bn.js');\nconst isHexPrefixed = require('./is-hex-prefixed');\nconst stripHexPrefix = require('./strip-hex-prefix');\n\nconst coerceToBN = (n) => {\n  switch (typeof n) {\n    case 'number':\n      return new BN(n);\n    case 'string':\n      if (isHexPrefixed(n)) return new BN(stripHexPrefix(n), 16);\n      return new BN(n);\n    default:\n      throw Error('Invalid argument to coerceToBN: ' + n);\n  }\n};\n\nmodule.exports = coerceToBN;\n"],"sourceRoot":""}